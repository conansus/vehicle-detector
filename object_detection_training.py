# -*- coding: utf-8 -*-
"""1_object_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OE9JqcWrvqzddXSIFrgH5DTVb2yfnFgy

how to validate

buat kat vgg model didi and friends

buat website
"""

!nvidia-smi  #tesla gpu

!pip install ultralytics

"""# New Section

# New Section
"""

!yolo predict model=yolov8n.pt source='/content/ozil.jpg'  #train validation predict mode, task can classify means what is in image, detect object in image, segmentation draw boundary on image

!pwd  #means the command must be executed in the terminal, and this is to display the current directory

!yolo predict model = yolov8n-seg.pt source = "https://ultralytics.com/images/bus.jpg"  #must have !yolo , what type of task, predict, model , source

from ultralytics import YOLO

model = YOLO("yolov8n.pt")  #load the model
model.predict(source= "/content/bus.jpg")

!yolo task = classify mode = predict model = yolov8n-cls.pt source="/content/ozil.jpg"

from google.colab import drive
drive.mount("/content/drive")    #/content/drive/MyDrive/detectobject.v1i.yolov8

!ls

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/detectobject.v1i.yolov8  #1ls is the list dirrectory   #cd to specify which directory you want to load or save file

!ls

!yolo task=detect mode=train model=yolov8s.pt data=/content/drive/MyDrive/OBJECT_DETECTION/second_vehicle_detection/secondone/finaldata2.yaml epochs = 100 patience = 50 batch = 16 imgsz = 224 plots = True  #data is the img path

!ls /content/drive/MyDrive/detectobject.v1i.yolov8/runs/detect/train3/weights/  #///\\\ for directory, \n \t \r === \\ means \

from IPython.display import Image

Image(filename = "/content/drive/MyDrive/detectobject.v1i.yolov8/runs/detect/train3/labels.jpg", width= 600)

!yolo task = detect mode = val model = /content/vehicle_detection.pt data=/content/drive/MyDrive/OBJECT_DETECTION/final_vehicle_dataset/finaldata.yaml

#IMAGE DETECTION
!yolo task = detect mode = predict model = /content/runs/detect/train/weights/best.pt conf = 0.20 iou = 0.3 source = /content/jlnraya2.jpg save=True save_txt = True

#VIDEO DETECTION the video saved is not compressed.
#non max suppression for choosing the best bounding box, iou to validate
#nms if the score is 0.2, means any intersection or union yg 0.2 dan ke ats akan filtered
#if iou big, means ada big intersection between 2 box
!yolo task = detect mode = predict model = /content/runs/detect/train3/weights/best.pt conf = 0.80 iou = 0.1 source = /content/cat2video.mp4

! ff mpeg -1 {"/content/runs/detect/predict3/cat2video.avi"} -vcodec libx264 { "videofinal.mp4"}